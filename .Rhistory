mass_school_shootings$city
sub('^.*\\,', '', "Nashville, TN")
sub('^.*\\,s', '', "Nashville, TN")
sub('^.*\\, ', '', "Nashville, TN")
mass_school_shootings$state <- sub('^.*\\, ', '', mass_school_shootings$Location)
mass_school_shootings$state
mass_school_shootings$city <- sub('^(A-Za-z+), A-Za-z+', '\\1', mass_school_shootings$Location)
mass_school_shootings$city
mass_school_shootings$city <- sub('^(.*), A-Za-z+', '\\1', mass_school_shootings$Location)
mass_school_shootings$city
mass_school_shootings$city <- sub('^(.*)\\, [A-Za-z]+', '\\1', mass_school_shootings$Location)
mass_school_shootings$city
mass_school_shootings$city[5] <- "Charles Town""
mass_school_shootings$city[5] <- "Charles Town"
mass_school_shootings$city
cities <- sort(c(rep('Stockholm', 3), 'Oslo', 'Rome', 'Rome', 'Paris', rep('Bonn',10), 'Paris', 'Paris', 'Stockholm'))
freq <- as.data.frame(table(cities))
library(plotrix)
install.packages("plotrix")
library(plotrix)
freq$Freq <- rescale(freq$Freq, c(1,10)) # c(scale_min, scale_max)
library(ggmap)
lonlat <- geocode(unique(cities))
cities <- cbind(freq, lonlat)
eu <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg",
"Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden", "United Kingdom")
warning("No matches in database for ", paste(setdiff(eu, map_data('world')$region), collapse=", "))
europe <- map_data('world', region=eu)
library(ggplot2)
ggplot(europe, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=cities, inherit.aes=F, aes(x=lon, y=lat, size=Freq), colour="red", alpha=.8) +
geom_text(data=cities, inherit.aes=F, aes(x=lon, y=lat, label=cities), vjust=1, colour="red", alpha=.5)
lonlat <- geocode(unique(mass_school_shootings$Location))
mass_school_shootings$lonlat <- geocode(unique(mass_school_shootings$Location))
View(mass_school_shootings)
usa <- map('state', fill = FALSE, col = "dark green")
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Deaths), colour="red", alpha=.8) +
geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=cities), vjust=1, colour="red", alpha=.5)
mass_school_shootings$Freq <- rescale(mass_school_shootings$Deaths, c(4,33)) # c(scale_min, scale_max)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) +
geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=cities), vjust=1, colour="red", alpha=.5)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) +
geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=mass_school_shootings$Location), vjust=1, colour="red", alpha=.5)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) +
geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=mass_school_shootings$Location), vjust=1, colour="red", alpha=.5)
names(mass_school_shootings)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) # +
#geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=mass_school_shootings$Location), vjust=1, colour="red", alpha=.5)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) # +
#geom_text(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, label=mass_school_shootings$Location), vjust=1, colour="red", alpha=.5)
ggplot(usa, aes(x=long, y=lat)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8)
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-125, -70) + ylim(30, 50) +
geom_point(data=mass_school_shootings$lonlat, inherit.aes=F, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8) # +
ggplot(usa, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black") +
xlim(-125, -70) + ylim(30, 50) +
geom_point(data=mass_school_shootings$lonlat, aes(x=lon, y=lat, size=mass_school_shootings$Freq), colour="red", alpha=.8)
setwd("~/Lipscomb/mass_shooting/twitter")
rm(list = ls())
praying = "🙏🙏"
iconvlist()
test <- iconv(praying, from = "UTF-8", to = "ASCII")
test <- iconv(praying, from = "LATIN-1", to = "ASCII")
test <- iconv(praying, from = "LATIN-1", to = "ASCII")
test <- iconv(praying, from = "LATIN1", to = "ASCII")
test <- as.character(praying)
library(stringr)
library(stringi)
str_detect(test, 'f64')
load('vt_tweets_feels.rda')
load('ucc_tweets_feels.rda')
load('sh_tweets_feels.rda')
View(VT_tweets)
rant <- "fuck you!! You evil bitch!! I am so angry"
library(syuzhet)
get_nrc_sentiment(rant)
letter <- "Why on earth are we not teaching martial arts in our kids' gym classes? There's been yet another school shooting, at an Amish school in Pennsylvania. This makes three deadly school shootings in the U.S. within a week. Enough! Our kids really don't deserve to grow up this way. When I was in high school, 1978-81, in gym class we had a great thing called life sports, which included things like cross-country skiing, bowling and even square dancing. The idea was that we would learn skills that we would keep and practice our entire lives. Why don't we apply the life sports concept to include the martial arts - basic self defense for all, taught for a minimum of, say, two months?"
get_nrc_sentiment(letter)
pos <- "we had a great thing called life sports, which included things like cross-country skiing, bowling and even square dancing. The idea was that we would learn skills that we would keep and practice our entire lives."
get_nrc_sentiment(pos)
get_nrc_sentiment("not happy")
praying
str_detect(test, '\U0001f64f')
str_detect(praying, '\U0001f64f')
str_detect("🙏" , '\U0001f64f')
setwd("~/GIT/SchoolShootings")
library(feather)
letters <- read_feather('letters.feather')
letters$datetime <- parse_date_time(letters$datetime, "mdY")
library(lubridate)
letters$datetime <- parse_date_time(letters$datetime, "mdY")
letters$wordcount <- vapply(strsplit(letters$letter, "\\W+"), length, integer(1))
stopwords(kind = "en")
library(tm)
library(tm)
stopwords(kind = "en")
letter$letterNSW <- removeWords(letters$letter("english"))
View(letters)
temp <- letters[2,1]
letter$letterNSW <- removeWords(letters$letter, stopwords("english"))
letters$letterNSW <- removeWords(letters$letter, stopwords("english"))
letters <- read_feather('letters.feather')
letters$datetime <- parse_date_time(letters$datetime, "mdY")
letters$letter <- tolower(letters$letter)
letters$letterNSW <- removeWords(letters$letter, stopwords("english"))
letters <- read_feather('letters.feather')
letters$datetime <- parse_date_time(letters$datetime, "mdY")
letters$letterNSW <- tolower(letters$letter)
letters$letterNSW <- removeWords(letters$letterNSW, stopwords("english"))
letters$wordcount <- vapply(strsplit(letters$letterNSW, "\\W+"), length, integer(1))
letters$letterNSW <- str_replace_all(letters$letterNSW, "[^[A-Za-z ]]", "")
letters$wordcount <- vapply(strsplit(letters$letterNSW, "\\W+"), length, integer(1))
setwd("~/Lipscomb/mass_shooting/twitter")
rm(list = ls())
library(tm)
library(lubridate)
library(stringi)
library(stringr)
load('vt_tweets.rda')
load('ucc_tweets.rda')
load('sh_tweets.rda')
VT_tweets$datetime <- parse_date_time(VT_tweets$datetime, "Ymd HMS")
UCC_tweets$datetime <- parse_date_time(UCC_tweets$datetime, "Ymd HMS")
SH_tweets$datetime <- parse_date_time(SH_tweets$datetime, "Ymd HMS")
VT_tweets$retweet <- substr(VT_tweets$tweet, 1, 2) == 'RT'
VT_tweets <- subset(VT_tweets, retweet == FALSE)
VT_tweets <- VT_tweets[,1:2]
VT_tweets$tweetNSW <- tolower(VT_tweets$tweet)
VT_tweets$tweetNSW <- removeWords(VT_tweets$tweetNSW, stopwords("english"))
VT_tweets$tweet <- str_replace_all(VT_tweets$tweetNSW, "[^[A-Za-z ]]", "")
VT_tweets$wordcount <- vapply(strsplit(VT_tweets$tweetNSW, "\\W+"), length, integer(1))
VT_tweets$source <- "twitter"
VT_tweets$event <- "VT"
UCC_tweets$retweet <- substr(UCC_tweets$tweet, 1, 2) == 'RT'
UCC_tweets <- subset(UCC_tweets, retweet == FALSE)
UCC_tweets <- UCC_tweets[,1:2]
UCC_tweets$tweetNSW <- tolower(UCC_tweets$tweet)
UCC_tweets$tweetNSW <- removeWords(UCC_tweets$tweetNSW, stopwords("english"))
UCC_tweets$tweet <- str_replace_all(UCC_tweets$tweetNSW, "[^[A-Za-z ]]", "")
UCC_tweets$wordcount <- vapply(strsplit(UCC_tweets$tweetNSW, "\\W+"), length, integer(1))
UCC_tweets$source <- "twitter"
UCC_tweets$event <- "UCC"
SH_tweets$retweet <- substr(SH_tweets$tweet, 1, 2) == 'RT'
SH_tweets <- subset(SH_tweets, retweet == FALSE)
SH_tweets <- SH_tweets[,1:2]
SH_tweets$tweetNSW <- tolower(SH_tweets$tweet)
SH_tweets$tweetNSW <- removeWords(SH_tweets$tweetNSW, stopwords("english"))
SH_tweets$tweet <- str_replace_all(SH_tweets$tweetNSW, "[^[A-Za-z ]]", "")
SH_tweets$wordcount <- vapply(strsplit(SH_tweets$tweetNSW, "\\W+"), length, integer(1))
SH_tweets$source <- "twitter"
SH_tweets$event <- "SH"
VT_tweets$feels <- get_nrc_sentiment(VT_tweets$tweetNSW)
UCC_tweets$feels <- get_nrc_sentiment(UCC_tweets$tweetNSW)
SH_tweets$feels <- get_nrc_sentiment(SH_tweets$tweetNSW)
letters$feels <- get_nrc_sentiment(letters$letterNSW)
letters <- read_feather('letters.feather')
setwd("~/GIT/SchoolShootings")
library(feather)
library(tm)
library(lubridate)
library(stringi)
library(stringr)
letters <- read_feather('letters.feather')
letters$datetime <- parse_date_time(letters$datetime, "mdY")
letters$letterNSW <- tolower(letters$letter)
letters$letterNSW <- removeWords(letters$letterNSW, stopwords("english"))
letters$letterNSW <- str_replace_all(letters$letterNSW, "[^[A-Za-z ]]", "")
letters$wordcount <- vapply(strsplit(letters$letterNSW, "\\W+"), length, integer(1))
library(syuzhet)
letters$feels <- get_nrc_sentiment(letters$letterNSW)
View(letters)
save(letters, file = 'letters_feels.rda')
letters$anger_adj <- letters$feels$anger/letters$wordcount
letters$anticipation_adj <- letters$feels$anticipation/letters$wordcount
letters$disgust_adj <- letters$feels$disgust/letters$wordcount
letters$fear_adj <- letters$feels$fear/letters$wordcount
letters$joy_adj <- <- letters$feels$joy/letters$wordcount
letters$joy_adj <- letters$feels$joy/letters$wordcount
letters$sadness_adj <- letters$feels$sadness/letters$wordcount
letters$surprise_adj <- letters$feels$surprise/letters$wordcount
letters$trust_adj <- letters$feels$trust/letters$wordcount
letters$negative_adj <- letters$feels$negative/letters$wordcount
letters$positive_adj <- letters$feels$positive/letters$wordcount
save(letters, file = 'letters_feels.rda')
VT_tweets$anger_adj <- VT_tweets$feels$anger/VT_tweets$wordcount
VT_tweets$anticipation_adj <- VT_tweets$feels$anticipation/VT_tweets$wordcount
VT_tweets$disgust_adj <- VT_tweets$feels$disgust/VT_tweets$wordcount
VT_tweets$fear_adj <- VT_tweets$feels$fear/VT_tweets$wordcount
VT_tweets$joy_adj <- VT_tweets$feels$joy/VT_tweets$wordcount
VT_tweets$sadness_adj <- VT_tweets$feels$sadness/VT_tweets$wordcount
VT_tweets$surprise_adj <- VT_tweets$feels$surprise/VT_tweets$wordcount
VT_tweets$trust_adj <- VT_tweets$feels$trust/VT_tweets$wordcount
VT_tweets$negative_adj <- VT_tweets$feels$negative/VT_tweets$wordcount
VT_tweets$positive_adj <- VT_tweets$feels$positive/VT_tweets$wordcount
UCC_tweets$feels <- get_nrc_sentiment(UCC_tweets$tweetNSW)
UCC_tweets$anger_adj <- UCC_tweets$feels$anger/UCC_tweets$wordcount
UCC_tweets$anticipation_adj <- UCC_tweets$feels$anticipation/UCC_tweets$wordcount
UCC_tweets$disgust_adj <- UCC_tweets$feels$disgust/UCC_tweets$wordcount
UCC_tweets$fear_adj <- UCC_tweets$feels$fear/UCC_tweets$wordcount
UCC_tweets$joy_adj <- UCC_tweets$feels$joy/UCC_tweets$wordcount
UCC_tweets$sadness_adj <- UCC_tweets$feels$sadness/UCC_tweets$wordcount
UCC_tweets$surprise_adj <- UCC_tweets$feels$surprise/UCC_tweets$wordcount
UCC_tweets$trust_adj <- UCC_tweets$feels$trust/UCC_tweets$wordcount
UCC_tweets$negative_adj <- UCC_tweets$feels$negative/UCC_tweets$wordcount
UCC_tweets$positive_adj <- UCC_tweets$feels$positive/UCC_tweets$wordcount
SH_tweets$anticipation_adj <- SH_tweets$feels$anticipation/SH_tweets$wordcount
SH_tweets$disgust_adj <- SH_tweets$feels$disgust/SH_tweets$wordcount
SH_tweets$fear_adj <- SH_tweets$feels$fear/SH_tweets$wordcount
SH_tweets$joy_adj <- SH_tweets$feels$joy/SH_tweets$wordcount
SH_tweets$sadness_adj <- SH_tweets$feels$sadness/SH_tweets$wordcount
SH_tweets$surprise_adj <- SH_tweets$feels$surprise/SH_tweets$wordcount
SH_tweets$trust_adj <- SH_tweets$feels$trust/SH_tweets$wordcount
SH_tweets$negative_adj <- SH_tweets$feels$negative/SH_tweets$wordcount
SH_tweets$positive_adj <- SH_tweets$feels$positive/SH_tweets$wordcount
SH_tweets$anger_adj <- SH_tweets$feels$anger/SH_tweets$wordcount
save(VT_tweets, file = 'vt_tweets_feels.rda')
save(UCC_tweets, file = 'ucc_tweets_feels.rda')
save(SH_tweets, file = 'sh_tweets_feels.rda')
setwd("~/Lipscomb/mass_shooting/twitter")
setwd("~/Lipscomb/mass_shooting")
grinning = '😁'  #grinning face with smiling eyes
smiling5 = '😊'  #smiling face with smiling eyes
my_test <- "Having a great day!!😁😊"
my_test2 <- sub(grinning, 'grinning', my_test)
my_test2 <- sub(smiling5, 'smiling', my_test2)
my_test2
source('~/Lipscomb/mass_shooting/emoji.R')
my_test <- "Having a great day!!😁😊"
my_test2 <- sub(grinning, ' grinning', my_test)
my_test2 <- sub(smiling5, ' smiling', my_test2)
my_test2
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
source('~/Lipscomb/mass_shooting/emoji.R')
setwd("~/Lipscomb/mass_shooting/twitter")
load('vt_tweets.rda')
load('ucc_tweets.rda')
load('sh_tweets.rda')
VT_tweets$datetime <- parse_date_time(VT_tweets$datetime, "Ymd HMS")
UCC_tweets$datetime <- parse_date_time(UCC_tweets$datetime, "Ymd HMS")
SH_tweets$datetime <- parse_date_time(SH_tweets$datetime, "Ymd HMS")
VT_tweets$retweet <- substr(VT_tweets$tweet, 1, 2) == 'RT'
VT_tweets <- subset(VT_tweets, retweet == FALSE)
VT_tweets <- VT_tweets[,1:2]
VT_tweets$tweetNSW <- tolower(VT_tweets$tweet)
VT_tweets <- subset(VT_tweets, retweet == FALSE)
VT_tweets$retweet <- substr(VT_tweets$tweet, 1, 2) == 'RT'
VT_tweets <- subset(VT_tweets, retweet == FALSE)
VT_tweets <- VT_tweets[,1:2]
VT_tweets$tweet_formatted <- translate_emojis(VT_tweets$tweet)
VT_tweets$tweet_formatted <- tolower(VT_tweets$tweet_formatted)
VT_tweets$tweet_formatted <- removeWords(VT_tweets$tweet_formatted, stopwords("english"))
VT_tweets$tweet_formatted <- str_replace_all(VT_tweets$tweet_formatted, "[^[A-Za-z ]]", "")
VT_tweets$wordcount <- vapply(strsplit(VT_tweets$tweet_formatted, "\\W+"), length, integer(1))
VT_tweets$source <- "twitter"
VT_tweets$event <- "VT"
UCC_tweets$retweet <- substr(UCC_tweets$tweet, 1, 2) == 'RT'
UCC_tweets <- subset(UCC_tweets, retweet == FALSE)
UCC_tweets <- UCC_tweets[,1:2]
UCC_tweets$tweet_formatted <- translate_emojis(UCC_tweets$tweet)
UCC_tweets$tweet_formatted <- tolower(UCC_tweets$tweet_formatted)
UCC_tweets$tweet_formatted <- removeWords(UCC_tweets$tweet_formatted, stopwords("english"))
UCC_tweets$tweet_formatted <- str_replace_all(UCC_tweets$tweet_formatted, "[^[A-Za-z ]]", "")
UCC_tweets$wordcount <- vapply(strsplit(UCC_tweets$tweet_formatted, "\\W+"), length, integer(1))
UCC_tweets$source <- "twitter"
UCC_tweets$event <- "UCC"
SH_tweets$retweet <- substr(SH_tweets$tweet, 1, 2) == 'RT'
SH_tweets <- subset(SH_tweets, retweet == FALSE)
SH_tweets <- SH_tweets[,1:2]
SH_tweets$tweet_formatted <- translate_emojis(SH_tweets$tweet)
test <- '😃 😉 😃'
translate_emojis(test)
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
translate_emojis(test)
test <- 'here's to you!! 😃 😉 😃'
test <- "here's to you!! 😃 😉 😃"
test2 <- translate_emojis(test)
test2
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test2
test2 <- translate_emojis(test)
test2
smiling = '😃'
sub(smiling, ' smiling', test)
gsub(smiling, ' smiling', test)
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test <- "here's to you!! 😃 😉 😃"
test2 <- translate_emojis(test)
test2
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
emojis <- vector(mode = "list", length = 58)
emojis <- ("😁", "😂", "😃", "😄", "😅", "😆", "😉", "😊", "😋", "😌", "😍",
"😏", "😒", "😓", "😔", "😖", "😘", "😚", "😜", "😝", "😞", "😠",
"😡", "😢", "😣", "😤", "😥", "😨", "😩", "😪", "😫", "😭", "😰",
"😱", "😲", "😳", "😵", "😷", "😸", "😹", "😺", "😻", "😼", "😽",
"😾", "😿", "🙀", "🙅", "🙆", "🙇", "🙈", "🙉", "🙊", "🙋", "🙌",
"🙍", "🙎", "🙏")
emojis <- c("😁", "😂", "😃", "😄", "😅", "😆", "😉", "😊", "😋", "😌", "😍",
"😏", "😒", "😓", "😔", "😖", "😘", "😚", "😜", "😝", "😞", "😠",
"😡", "😢", "😣", "😤", "😥", "😨", "😩", "😪", "😫", "😭", "😰",
"😱", "😲", "😳", "😵", "😷", "😸", "😹", "😺", "😻", "😼", "😽",
"😾", "😿", "🙀", "🙅", "🙆", "🙇", "🙈", "🙉", "🙊", "🙋", "🙌",
"🙍", "🙎", "🙏")
names(emojis) <- c('grinning', 'tears_of_joy', 'smiling', 'smiling2', 'smiling3', 'smiling4',
'winking','smiling5', 'delicious', 'relieved', 'smiling_heart', 'smirking',
'unamused', 'cold_sweat', 'pensive', 'confounded', 'kiss', 'kiss2', 'tongue_out',
'tongue_out2', 'disappointed', 'angry', 'pouting', 'crying', 'persevering',
'triumph', 'disappointed_relieved', 'fearful', 'weary', 'sleepy', 'tired',
'bawling', 'cold_sweat', 'screaming_fear', 'astonished', 'flushed','dizzy',
'medical_mask', 'grinning2', 'tears_of_joy2', 'smiling6', 'smiling_heart2',
'smiling_wry', 'kiss3', 'pouting2', 'crying2', 'weary2', 'no_good', 'okay',
'bowing', 'see_no_evil', 'hear_no_evil', 'say_no_evil', 'happy', 'celebration',
'frowning', 'pouting3', 'praying')
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
emojis$grinning
emojis(grinning)
emojis['grinning']
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
my_test
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
translate_emojis(my_test)
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test <- "Yay!! 😁😁😁"
test2 <- gsub(emojis['grinning'], ' grinning ', test)
test2
test3 <- translate_emojis(test)
test3
test2 <- gsub(emojis['grinning'], ' grinning ', test)
test2
test
test2 <- gsub(emojis['grinning'], ' grinning ', test)
test
test2
gsub(emojis['grinning'], ' grinning ', test)
test
sub(emojis['grinning'], ' grinning ', test)
test <- sub(emojis['grinning'], ' grinning ', test)
test
test <- gsub(emojis['grinning'], ' grinning ', test)
test
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test <- "Yay!! 😁😁😁"
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
translate_emojis(test)
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test <- "Yay!! 😁😁😁"
translate_emojis(test)
test
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
test <- "Yay!! 😁😁😁"
translate_emojis(test)
test
test2 <- translate_emojis(test)
test2
rm(translate_emojis())
source(translate_emojis.R)
rm(list = ls())
setwd("~/Lipscomb/mass_shooting/twitter")
rm(list = ls())
source('~/Lipscomb/mass_shooting/twitter/translate_emojis.R')
library(tm)
library(lubridate)
library(stringi)
library(stringr)
load('vt_tweets.rda')
load('ucc_tweets.rda')
load('sh_tweets.rda')
VT_tweets$datetime <- parse_date_time(VT_tweets$datetime, "Ymd HMS")
UCC_tweets$datetime <- parse_date_time(UCC_tweets$datetime, "Ymd HMS")
SH_tweets$datetime <- parse_date_time(SH_tweets$datetime, "Ymd HMS")
VT_tweets$retweet <- substr(VT_tweets$tweet, 1, 2) == 'RT'
VT_tweets <- subset(VT_tweets, retweet == FALSE)
VT_tweets <- VT_tweets[,1:2]
VT_tweets$tweet_formatted <- translate_emojis(VT_tweets$tweet)
VT_tweets$tweet_formatted <- tolower(VT_tweets$tweet_formatted)
VT_tweets$tweet_formatted <- removeWords(VT_tweets$tweet_formatted, stopwords("english"))
VT_tweets$tweet_formatted <- str_replace_all(VT_tweets$tweet_formatted, "[^[A-Za-z ]]", "")
VT_tweets$wordcount <- vapply(strsplit(VT_tweets$tweet_formatted, "\\W+"), length, integer(1))
VT_tweets$source <- "twitter"
VT_tweets$event <- "VT"
#UCC dropped from 208,034 to 82,000
UCC_tweets$retweet <- substr(UCC_tweets$tweet, 1, 2) == 'RT'
UCC_tweets <- subset(UCC_tweets, retweet == FALSE)
UCC_tweets <- UCC_tweets[,1:2]
UCC_tweets$tweet_formatted <- translate_emojis(UCC_tweets$tweet)
UCC_tweets$tweet_formatted <- tolower(UCC_tweets$tweet_formatted)
UCC_tweets$tweet_formatted <- removeWords(UCC_tweets$tweet_formatted, stopwords("english"))
UCC_tweets$tweet_formatted <- str_replace_all(UCC_tweets$tweet_formatted, "[^[A-Za-z ]]", "")
UCC_tweets$wordcount <- vapply(strsplit(UCC_tweets$tweet_formatted, "\\W+"), length, integer(1))
UCC_tweets$source <- "twitter"
UCC_tweets$event <- "UCC"
#SH dropped from 1,139,751 to 597,835
SH_tweets$retweet <- substr(SH_tweets$tweet, 1, 2) == 'RT'
SH_tweets <- subset(SH_tweets, retweet == FALSE)
SH_tweets <- SH_tweets[,1:2]
SH_tweets$tweet_formatted <- translate_emojis(SH_tweets$tweet)
SH_tweets$tweet_formatted <- tolower(SH_tweets$tweet_formatted)
SH_tweets$tweet_formatted <- removeWords(SH_tweets$tweet_formatted, stopwords("english"))
SH_tweets$tweet_formatted <- str_replace_all(SH_tweets$tweet_formatted, "[^[A-Za-z ]]", "")
SH_tweets$wordcount <- vapply(strsplit(SH_tweets$tweet_formatted, "\\W+"), length, integer(1))
SH_tweets$source <- "twitter"
SH_tweets$event <- "SH"
View(SH_tweets)
library(syuzhet)
VT_tweets$feels <- get_nrc_sentiment(VT_tweets$tweetNSW)
VT_tweets$anger_adj <- VT_tweets$feels$anger/VT_tweets$wordcount
VT_tweets$feels <- get_nrc_sentiment(VT_tweets$tweet_formatted)
VT_tweets$anger_adj <- VT_tweets$feels$anger/VT_tweets$wordcount
VT_tweets$anticipation_adj <- VT_tweets$feels$anticipation/VT_tweets$wordcount
VT_tweets$disgust_adj <- VT_tweets$feels$disgust/VT_tweets$wordcount
VT_tweets$fear_adj <- VT_tweets$feels$fear/VT_tweets$wordcount
VT_tweets$joy_adj <- VT_tweets$feels$joy/VT_tweets$wordcount
VT_tweets$sadness_adj <- VT_tweets$feels$sadness/VT_tweets$wordcount
VT_tweets$surprise_adj <- VT_tweets$feels$surprise/VT_tweets$wordcount
VT_tweets$trust_adj <- VT_tweets$feels$trust/VT_tweets$wordcount
VT_tweets$negative_adj <- VT_tweets$feels$negative/VT_tweets$wordcount
VT_tweets$positive_adj <- VT_tweets$feels$positive/VT_tweets$wordcount
UCC_tweets$feels <- get_nrc_sentiment(UCC_tweets$tweet_formatted)
UCC_tweets$anger_adj <- UCC_tweets$feels$anger/UCC_tweets$wordcount
UCC_tweets$anticipation_adj <- UCC_tweets$feels$anticipation/UCC_tweets$wordcount
UCC_tweets$disgust_adj <- UCC_tweets$feels$disgust/UCC_tweets$wordcount
UCC_tweets$fear_adj <- UCC_tweets$feels$fear/UCC_tweets$wordcount
UCC_tweets$joy_adj <- UCC_tweets$feels$joy/UCC_tweets$wordcount
UCC_tweets$sadness_adj <- UCC_tweets$feels$sadness/UCC_tweets$wordcount
UCC_tweets$surprise_adj <- UCC_tweets$feels$surprise/UCC_tweets$wordcount
UCC_tweets$trust_adj <- UCC_tweets$feels$trust/UCC_tweets$wordcount
UCC_tweets$negative_adj <- UCC_tweets$feels$negative/UCC_tweets$wordcount
UCC_tweets$positive_adj <- UCC_tweets$feels$positive/UCC_tweets$wordcount
SH_tweets$feels <- get_nrc_sentiment(SH_tweets$tweet_formatted)
SH_tweets$anger_adj <- SH_tweets$feels$anger/SH_tweets$wordcount
SH_tweets$anticipation_adj <- SH_tweets$feels$anticipation/SH_tweets$wordcount
SH_tweets$disgust_adj <- SH_tweets$feels$disgust/SH_tweets$wordcount
SH_tweets$fear_adj <- SH_tweets$feels$fear/SH_tweets$wordcount
SH_tweets$joy_adj <- SH_tweets$feels$joy/SH_tweets$wordcount
SH_tweets$sadness_adj <- SH_tweets$feels$sadness/SH_tweets$wordcount
SH_tweets$surprise_adj <- SH_tweets$feels$surprise/SH_tweets$wordcount
SH_tweets$trust_adj <- SH_tweets$feels$trust/SH_tweets$wordcount
SH_tweets$negative_adj <- SH_tweets$feels$negative/SH_tweets$wordcount
SH_tweets$positive_adj <- SH_tweets$feels$positive/SH_tweets$wordcount
save(VT_tweets, file = 'vt_tweets_feels.rda')
save(UCC_tweets, file = 'ucc_tweets_feels.rda')
save(SH_tweets, file = 'sh_tweets_feels.rda')
setwd("~/GIT/SchoolShootings")
library(feather)
library(tm)
library(lubridate)
library(stringr)
letters <- read_feather('letters.feather')
letters <- read_feather('R/letters.feather')
letters$datetime <- parse_date_time(letters$datetime, "mdY")
letters$letter_formatted <- tolower(letters$letter)
letters$letter_formatted <- removeWords(letters$letter_formatted, stopwords("english"))
letters$letter_formatted <- str_replace_all(letters$letter_formatted, "[^[A-Za-z ]]", "")
letters$wordcount <- vapply(strsplit(letters$letter_formatted, "\\W+"), length, integer(1))
#calculate raw and adjusted sentiment values
library(syuzhet)
letters$feels <- get_nrc_sentiment(letters$letter_formatted)
letters$anger_adj <- letters$feels$anger/letters$wordcount
letters$anticipation_adj <- letters$feels$anticipation/letters$wordcount
letters$disgust_adj <- letters$feels$disgust/letters$wordcount
letters$fear_adj <- letters$feels$fear/letters$wordcount
letters$joy_adj <- letters$feels$joy/letters$wordcount
letters$sadness_adj <- letters$feels$sadness/letters$wordcount
letters$surprise_adj <- letters$feels$surprise/letters$wordcount
letters$trust_adj <- letters$feels$trust/letters$wordcount
letters$negative_adj <- letters$feels$negative/letters$wordcount
letters$positive_adj <- letters$feels$positive/letters$wordcount
save(letters, file = 'letters_feels.rda')
